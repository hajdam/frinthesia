apply plugin: 'java'

sourceCompatibility = '1.7'
version = '0.1.0-SNAPSHOT'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
if (!hasProperty('mainClass')) {
    ext.mainClass = 'com.frinika.FrinikaMain'
    ext.appArgs = '-dev'
}

def configureExec(task) {
    task.main = mainClass
    task.classpath = sourceSets.main.runtimeClasspath
    task.args appArgs
}

task run(type: JavaExec) {
    task -> configureExec(task)
}

task debug(type: JavaExec) {
    task -> configureExec(task)
    debug = true
}

tasks.withType(JavaCompile) {
    doFirst {
        options.fork = true
        options.bootClasspath = "${System.properties['java.home']}/lib/rt.jar"
        options.bootClasspath += "$File.pathSeparator${System.properties['java.home']}/jre/lib/jsse.jar"
    }
}

repositories {
    mavenCentral()
    flatDir {
        dirs "../../lib"
    }
}

// Disable tests on build
check.dependsOn.remove(test)

dependencies {
    compile ':jspf.core:1.0.2'
    compile ':commons-logging'
    compile ':flexdock:0.5.1'
    compile ':FrinikaJVSTSynth'
    compile ':FrinikaServerInterfaces'
    compile ':FrinikaVideoSynth'
    compile ':FrinikaVorbisSPI'
    compile ':gervill'
    compile ':groovy-all:2.0.1'
    compile ':javax.servlet'
    compile ':jetty:6.1.12rc1'
    compile ':jetty-util:6.1.12rc1'
    compile ':jjack'
    compile ':jmod_0_9k'
    compile ':jogg:0.0.7'
    compile ':jorbis:0.0.15'
    compile ':js'
    compile ':jVorbis'
    compile ':JVstHost'
    compile ':lmappletserver_core'
    compile ':Logging'
    compile ':looks:2.1.3'
    compile ':MacStub'
    compile ':MRJAdapter'
    compile ':RasmusDSP'
    compile ':toot'
    compile ':TootAudioServers'
    compile ':tootvst'
    compile ':tritonus_share'
    compile ':vorbis-java'
    compile ':vorbisspi1.0.3'
    compile 'com.apple:AppleJavaExtensions:1.4'
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

jar {
    manifest {
        attributes(
            'Main-Class': mainClass,
            'Class-Path': configurations.runtime.collect {'../lib/' + it.getName() }.join(' ')
        )
    }
}
